[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "code-summarizer"
version = "1.0.0"
description = "AI-powered code analysis and summarization tool"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Code Analysis Team", email = "team@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "openai>=1.0.0",
    "pyyaml>=6.0",
    "tiktoken>=0.5.0",
    "python-dotenv>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourorg/code-summarizer"
Issues = "https://github.com/yourorg/code-summarizer/issues"
Repository = "https://github.com/yourorg/code-summarizer"

[project.scripts]
code-summarizer = "code_summarizer.main:cli"

[tool.hatch.build.targets.wheel]
packages = ["src/code_summarizer"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

# Ruff configuration
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# Black configuration
[tool.black]
target-version = ["py38"]
line-length = 88
include = '\.pyi?$'

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=src/code_summarizer --cov-report=term-missing"

# Coverage configuration
[tool.coverage.run]
source = ["src/code_summarizer"]

[tool.coverage.report]
show_missing = true